#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProjectManagement")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCityMaster(CityMaster instance);
  partial void UpdateCityMaster(CityMaster instance);
  partial void DeleteCityMaster(CityMaster instance);
  partial void InsertContactUs(ContactUs instance);
  partial void UpdateContactUs(ContactUs instance);
  partial void DeleteContactUs(ContactUs instance);
  partial void InsertDesignationMaster(DesignationMaster instance);
  partial void UpdateDesignationMaster(DesignationMaster instance);
  partial void DeleteDesignationMaster(DesignationMaster instance);
  partial void InsertHolidayMaster(HolidayMaster instance);
  partial void UpdateHolidayMaster(HolidayMaster instance);
  partial void DeleteHolidayMaster(HolidayMaster instance);
  partial void InsertNewsMaster(NewsMaster instance);
  partial void UpdateNewsMaster(NewsMaster instance);
  partial void DeleteNewsMaster(NewsMaster instance);
  partial void InsertStateMaster(StateMaster instance);
  partial void UpdateStateMaster(StateMaster instance);
  partial void DeleteStateMaster(StateMaster instance);
  partial void InsertAdmin(Admin instance);
  partial void UpdateAdmin(Admin instance);
  partial void DeleteAdmin(Admin instance);
  partial void InsertCompanyTypeMaster(CompanyTypeMaster instance);
  partial void UpdateCompanyTypeMaster(CompanyTypeMaster instance);
  partial void DeleteCompanyTypeMaster(CompanyTypeMaster instance);
  partial void InsertTable(Table instance);
  partial void UpdateTable(Table instance);
  partial void DeleteTable(Table instance);
  partial void InsertCompanyMaster(CompanyMaster instance);
  partial void UpdateCompanyMaster(CompanyMaster instance);
  partial void DeleteCompanyMaster(CompanyMaster instance);
  partial void InsertEventMaster(EventMaster instance);
  partial void UpdateEventMaster(EventMaster instance);
  partial void DeleteEventMaster(EventMaster instance);
  partial void InsertEmployeeMaster(EmployeeMaster instance);
  partial void UpdateEmployeeMaster(EmployeeMaster instance);
  partial void DeleteEmployeeMaster(EmployeeMaster instance);
  partial void InsertAllProject(AllProject instance);
  partial void UpdateAllProject(AllProject instance);
  partial void DeleteAllProject(AllProject instance);
  partial void InsertTaskMaster(TaskMaster instance);
  partial void UpdateTaskMaster(TaskMaster instance);
  partial void DeleteTaskMaster(TaskMaster instance);
  partial void InsertProjectMaster(ProjectMaster instance);
  partial void UpdateProjectMaster(ProjectMaster instance);
  partial void DeleteProjectMaster(ProjectMaster instance);
  partial void InsertBugMaster(BugMaster instance);
  partial void UpdateBugMaster(BugMaster instance);
  partial void DeleteBugMaster(BugMaster instance);
  partial void InsertLeaveMaster(LeaveMaster instance);
  partial void UpdateLeaveMaster(LeaveMaster instance);
  partial void DeleteLeaveMaster(LeaveMaster instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProjectManagementConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<CityMaster> CityMasters
	{
		get
		{
			return this.GetTable<CityMaster>();
		}
	}
	
	public System.Data.Linq.Table<ContactUs> ContactUs
	{
		get
		{
			return this.GetTable<ContactUs>();
		}
	}
	
	public System.Data.Linq.Table<DesignationMaster> DesignationMasters
	{
		get
		{
			return this.GetTable<DesignationMaster>();
		}
	}
	
	public System.Data.Linq.Table<HolidayMaster> HolidayMasters
	{
		get
		{
			return this.GetTable<HolidayMaster>();
		}
	}
	
	public System.Data.Linq.Table<NewsMaster> NewsMasters
	{
		get
		{
			return this.GetTable<NewsMaster>();
		}
	}
	
	public System.Data.Linq.Table<StateMaster> StateMasters
	{
		get
		{
			return this.GetTable<StateMaster>();
		}
	}
	
	public System.Data.Linq.Table<Admin> Admins
	{
		get
		{
			return this.GetTable<Admin>();
		}
	}
	
	public System.Data.Linq.Table<CompanyTypeMaster> CompanyTypeMasters
	{
		get
		{
			return this.GetTable<CompanyTypeMaster>();
		}
	}
	
	public System.Data.Linq.Table<Table> Tables
	{
		get
		{
			return this.GetTable<Table>();
		}
	}
	
	public System.Data.Linq.Table<CompanyMaster> CompanyMasters
	{
		get
		{
			return this.GetTable<CompanyMaster>();
		}
	}
	
	public System.Data.Linq.Table<EventMaster> EventMasters
	{
		get
		{
			return this.GetTable<EventMaster>();
		}
	}
	
	public System.Data.Linq.Table<EmployeeMaster> EmployeeMasters
	{
		get
		{
			return this.GetTable<EmployeeMaster>();
		}
	}
	
	public System.Data.Linq.Table<AllProject> AllProjects
	{
		get
		{
			return this.GetTable<AllProject>();
		}
	}
	
	public System.Data.Linq.Table<TaskMaster> TaskMasters
	{
		get
		{
			return this.GetTable<TaskMaster>();
		}
	}
	
	public System.Data.Linq.Table<ProjectMaster> ProjectMasters
	{
		get
		{
			return this.GetTable<ProjectMaster>();
		}
	}
	
	public System.Data.Linq.Table<BugMaster> BugMasters
	{
		get
		{
			return this.GetTable<BugMaster>();
		}
	}
	
	public System.Data.Linq.Table<LeaveMaster> LeaveMasters
	{
		get
		{
			return this.GetTable<LeaveMaster>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_city")]
	public ISingleResult<manage_cityResult> manage_city([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string cname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cid, cname, sid, type);
		return ((ISingleResult<manage_cityResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_contactus")]
	public ISingleResult<manage_contactusResult> manage_contactus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string companyname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string mobileno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string faxno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string website, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string location, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyid, companyname, address, mobileno, phone, faxno, email, website, location, type);
		return ((ISingleResult<manage_contactusResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_holidaymaster")]
	public ISingleResult<manage_holidaymasterResult> manage_holidaymaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> holidayid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string holidayname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), holidayid, holidayname, type);
		return ((ISingleResult<manage_holidaymasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_state")]
	public ISingleResult<manage_stateResult> manage_state([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string sname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sid, sname, type);
		return ((ISingleResult<manage_stateResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_companytypemaster")]
	public ISingleResult<manage_companytypemasterResult> manage_companytypemaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companytypeid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string companytype, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companytypeid, companytype, type);
		return ((ISingleResult<manage_companytypemasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_designationmaster")]
	public ISingleResult<manage_designationmasterResult> manage_designationmaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> degid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string designation, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), degid, designation, type);
		return ((ISingleResult<manage_designationmasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_pwd")]
	public int manage_pwd([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8)")] string pwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, pwd, type);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_newsmaster")]
	public ISingleResult<manage_newsmasterResult> manage_newsmaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> newsid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string news, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newsid, news, companyid, flag, type);
		return ((ISingleResult<manage_newsmasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_eventmaster")]
	public ISingleResult<manage_eventmasterResult> manage_eventmaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eventid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> eventdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string eventname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventid, eventdate, eventname, cid, type);
		return ((ISingleResult<manage_eventmasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_employee")]
	public ISingleResult<manage_employeeResult> manage_employee(
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string fname, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string mname, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string lname, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string address, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string mobileno, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string email, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8)")] string password, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string photo, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> degid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string dob, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string jdate, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> coid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empid, fname, mname, lname, address, cid, sid, mobileno, email, password, photo, degid, dob, jdate, coid, type);
		return ((ISingleResult<manage_employeeResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_employee1")]
	public int manage_employee1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string fname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string mname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string lname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string mobileno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(80)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(18)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string photo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> degid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string dob, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> coid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fname, mname, lname, address, cid, sid, mobileno, email, password, photo, degid, dob, coid);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_Allproject")]
	public ISingleResult<manage_AllprojectResult> manage_Allproject([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProjectNameAll", DbType="VarChar(50)")] string projectNameAll, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyId", DbType="Int")] System.Nullable<int> companyId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid, projectNameAll, companyId, type);
		return ((ISingleResult<manage_AllprojectResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_taskmaster11")]
	public ISingleResult<manage_taskmaster11Result> manage_taskmaster11([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> taskid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string taskname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> projectid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> sdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> edate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string taskstatus, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> tdate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="Int")] System.Nullable<int> empId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), taskid, taskname, projectid, sdate, edate, taskstatus, tdate, empId, type);
		return ((ISingleResult<manage_taskmaster11Result>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_company1")]
	public ISingleResult<manage_company1Result> manage_company1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string companyname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string mobileno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string faxno, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string website, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string photo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empstrenght, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companytypeid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string pwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyid, companyname, address, cid, sid, mobileno, phone, faxno, email, website, photo, empstrenght, companytypeid, pwd, type);
		return ((ISingleResult<manage_company1Result>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_projectmaster")]
	public ISingleResult<manage_projectmasterResult> manage_projectmaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> projectid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string discription, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> pdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> sdate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> edate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), projectid, discription, pdate, empid, sdate, edate, cid, pid, type);
		return ((ISingleResult<manage_projectmasterResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_bug")]
	public ISingleResult<manage_bugResult> manage_bug([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> bugid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string bugname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> taskid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string solution, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bugid, bugname, empid, taskid, solution, type);
		return ((ISingleResult<manage_bugResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.manage_leavemaster")]
	public ISingleResult<manage_leavemasterResult> manage_leavemaster([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> leaveid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(200)")] string leavereason, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string leavestatus, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), leaveid, leavereason, leavestatus, empid, type);
		return ((ISingleResult<manage_leavemasterResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityMaster")]
public partial class CityMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CityId;
	
	private string _CityName;
	
	private System.Nullable<int> _StateId;
	
	private EntitySet<CompanyMaster> _CompanyMasters;
	
	private EntitySet<EmployeeMaster> _EmployeeMasters;
	
	private EntityRef<StateMaster> _StateMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    #endregion
	
	public CityMaster()
	{
		this._CompanyMasters = new EntitySet<CompanyMaster>(new Action<CompanyMaster>(this.attach_CompanyMasters), new Action<CompanyMaster>(this.detach_CompanyMasters));
		this._EmployeeMasters = new EntitySet<EmployeeMaster>(new Action<EmployeeMaster>(this.attach_EmployeeMasters), new Action<EmployeeMaster>(this.detach_EmployeeMasters));
		this._StateMaster = default(EntityRef<StateMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this.OnCityIdChanging(value);
				this.SendPropertyChanging();
				this._CityId = value;
				this.SendPropertyChanged("CityId");
				this.OnCityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(10)")]
	public string CityName
	{
		get
		{
			return this._CityName;
		}
		set
		{
			if ((this._CityName != value))
			{
				this.OnCityNameChanging(value);
				this.SendPropertyChanging();
				this._CityName = value;
				this.SendPropertyChanged("CityName");
				this.OnCityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_CompanyMaster", Storage="_CompanyMasters", ThisKey="CityId", OtherKey="CityId")]
	public EntitySet<CompanyMaster> CompanyMasters
	{
		get
		{
			return this._CompanyMasters;
		}
		set
		{
			this._CompanyMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_EmployeeMaster", Storage="_EmployeeMasters", ThisKey="CityId", OtherKey="CityId")]
	public EntitySet<EmployeeMaster> EmployeeMasters
	{
		get
		{
			return this._EmployeeMasters;
		}
		set
		{
			this._EmployeeMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_StateMaster", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.CityMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.CityMasters.Add(this);
					this._StateId = value.StateId;
				}
				else
				{
					this._StateId = default(Nullable<int>);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster = this;
	}
	
	private void detach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster = null;
	}
	
	private void attach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster = this;
	}
	
	private void detach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.CityMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactUs")]
public partial class ContactUs : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CId;
	
	private string _ComapanyName;
	
	private string _Addres;
	
	private string _MobileNo;
	
	private string _Phone;
	
	private string _FaxNo;
	
	private string _Email;
	
	private string _Website;
	
	private string _LocationUrl;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIdChanging(int value);
    partial void OnCIdChanged();
    partial void OnComapanyNameChanging(string value);
    partial void OnComapanyNameChanged();
    partial void OnAddresChanging(string value);
    partial void OnAddresChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxNoChanging(string value);
    partial void OnFaxNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnLocationUrlChanging(string value);
    partial void OnLocationUrlChanged();
    #endregion
	
	public ContactUs()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CId
	{
		get
		{
			return this._CId;
		}
		set
		{
			if ((this._CId != value))
			{
				this.OnCIdChanging(value);
				this.SendPropertyChanging();
				this._CId = value;
				this.SendPropertyChanged("CId");
				this.OnCIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComapanyName", DbType="VarChar(20)")]
	public string ComapanyName
	{
		get
		{
			return this._ComapanyName;
		}
		set
		{
			if ((this._ComapanyName != value))
			{
				this.OnComapanyNameChanging(value);
				this.SendPropertyChanging();
				this._ComapanyName = value;
				this.SendPropertyChanged("ComapanyName");
				this.OnComapanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this.OnAddresChanging(value);
				this.SendPropertyChanging();
				this._Addres = value;
				this.SendPropertyChanged("Addres");
				this.OnAddresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this.OnMobileNoChanging(value);
				this.SendPropertyChanging();
				this._MobileNo = value;
				this.SendPropertyChanged("MobileNo");
				this.OnMobileNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNo", DbType="VarChar(10)")]
	public string FaxNo
	{
		get
		{
			return this._FaxNo;
		}
		set
		{
			if ((this._FaxNo != value))
			{
				this.OnFaxNoChanging(value);
				this.SendPropertyChanging();
				this._FaxNo = value;
				this.SendPropertyChanged("FaxNo");
				this.OnFaxNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(10)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(20)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationUrl", DbType="VarChar(20)")]
	public string LocationUrl
	{
		get
		{
			return this._LocationUrl;
		}
		set
		{
			if ((this._LocationUrl != value))
			{
				this.OnLocationUrlChanging(value);
				this.SendPropertyChanging();
				this._LocationUrl = value;
				this.SendPropertyChanged("LocationUrl");
				this.OnLocationUrlChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesignationMaster")]
public partial class DesignationMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DegId;
	
	private string _Designation;
	
	private EntitySet<EmployeeMaster> _EmployeeMasters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDegIdChanging(int value);
    partial void OnDegIdChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
	
	public DesignationMaster()
	{
		this._EmployeeMasters = new EntitySet<EmployeeMaster>(new Action<EmployeeMaster>(this.attach_EmployeeMasters), new Action<EmployeeMaster>(this.detach_EmployeeMasters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				this.OnDegIdChanging(value);
				this.SendPropertyChanging();
				this._DegId = value;
				this.SendPropertyChanged("DegId");
				this.OnDegIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(20)")]
	public string Designation
	{
		get
		{
			return this._Designation;
		}
		set
		{
			if ((this._Designation != value))
			{
				this.OnDesignationChanging(value);
				this.SendPropertyChanging();
				this._Designation = value;
				this.SendPropertyChanged("Designation");
				this.OnDesignationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesignationMaster_EmployeeMaster", Storage="_EmployeeMasters", ThisKey="DegId", OtherKey="DegId")]
	public EntitySet<EmployeeMaster> EmployeeMasters
	{
		get
		{
			return this._EmployeeMasters;
		}
		set
		{
			this._EmployeeMasters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.DesignationMaster = this;
	}
	
	private void detach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.DesignationMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HolidayMaster")]
public partial class HolidayMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _HolidayId;
	
	private string _HolidayName;
	
	private System.Nullable<System.DateTime> _HolidayDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHolidayIdChanging(int value);
    partial void OnHolidayIdChanged();
    partial void OnHolidayNameChanging(string value);
    partial void OnHolidayNameChanged();
    partial void OnHolidayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHolidayDateChanged();
    #endregion
	
	public HolidayMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int HolidayId
	{
		get
		{
			return this._HolidayId;
		}
		set
		{
			if ((this._HolidayId != value))
			{
				this.OnHolidayIdChanging(value);
				this.SendPropertyChanging();
				this._HolidayId = value;
				this.SendPropertyChanged("HolidayId");
				this.OnHolidayIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayName", DbType="VarChar(10)")]
	public string HolidayName
	{
		get
		{
			return this._HolidayName;
		}
		set
		{
			if ((this._HolidayName != value))
			{
				this.OnHolidayNameChanging(value);
				this.SendPropertyChanging();
				this._HolidayName = value;
				this.SendPropertyChanged("HolidayName");
				this.OnHolidayNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> HolidayDate
	{
		get
		{
			return this._HolidayDate;
		}
		set
		{
			if ((this._HolidayDate != value))
			{
				this.OnHolidayDateChanging(value);
				this.SendPropertyChanging();
				this._HolidayDate = value;
				this.SendPropertyChanged("HolidayDate");
				this.OnHolidayDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsMaster")]
public partial class NewsMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NewsId;
	
	private string _News;
	
	private System.Nullable<System.DateTime> _NewsDate;
	
	private System.Nullable<int> _CompanyId;
	
	private System.Nullable<bool> _Flag;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIdChanging(int value);
    partial void OnNewsIdChanged();
    partial void OnNewsChanging(string value);
    partial void OnNewsChanged();
    partial void OnNewsDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNewsDateChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnFlagChanging(System.Nullable<bool> value);
    partial void OnFlagChanged();
    #endregion
	
	public NewsMaster()
	{
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NewsId
	{
		get
		{
			return this._NewsId;
		}
		set
		{
			if ((this._NewsId != value))
			{
				this.OnNewsIdChanging(value);
				this.SendPropertyChanging();
				this._NewsId = value;
				this.SendPropertyChanged("NewsId");
				this.OnNewsIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_News", DbType="VarChar(100)")]
	public string News
	{
		get
		{
			return this._News;
		}
		set
		{
			if ((this._News != value))
			{
				this.OnNewsChanging(value);
				this.SendPropertyChanging();
				this._News = value;
				this.SendPropertyChanged("News");
				this.OnNewsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsDate", DbType="Date")]
	public System.Nullable<System.DateTime> NewsDate
	{
		get
		{
			return this._NewsDate;
		}
		set
		{
			if ((this._NewsDate != value))
			{
				this.OnNewsDateChanging(value);
				this.SendPropertyChanging();
				this._NewsDate = value;
				this.SendPropertyChanged("NewsDate");
				this.OnNewsDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				if (this._CompanyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyId = value;
				this.SendPropertyChanged("CompanyId");
				this.OnCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Bit")]
	public System.Nullable<bool> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_NewsMaster", Storage="_CompanyMaster", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.NewsMasters.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.NewsMasters.Add(this);
					this._CompanyId = value.CompanyId;
				}
				else
				{
					this._CompanyId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateMaster")]
public partial class StateMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _StateId;
	
	private string _StateName;
	
	private EntitySet<CityMaster> _CityMasters;
	
	private EntitySet<CompanyMaster> _CompanyMasters;
	
	private EntitySet<EmployeeMaster> _EmployeeMasters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    #endregion
	
	public StateMaster()
	{
		this._CityMasters = new EntitySet<CityMaster>(new Action<CityMaster>(this.attach_CityMasters), new Action<CityMaster>(this.detach_CityMasters));
		this._CompanyMasters = new EntitySet<CompanyMaster>(new Action<CompanyMaster>(this.attach_CompanyMasters), new Action<CompanyMaster>(this.detach_CompanyMasters));
		this._EmployeeMasters = new EntitySet<EmployeeMaster>(new Action<EmployeeMaster>(this.attach_EmployeeMasters), new Action<EmployeeMaster>(this.detach_EmployeeMasters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(10)")]
	public string StateName
	{
		get
		{
			return this._StateName;
		}
		set
		{
			if ((this._StateName != value))
			{
				this.OnStateNameChanging(value);
				this.SendPropertyChanging();
				this._StateName = value;
				this.SendPropertyChanged("StateName");
				this.OnStateNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CityMaster", Storage="_CityMasters", ThisKey="StateId", OtherKey="StateId")]
	public EntitySet<CityMaster> CityMasters
	{
		get
		{
			return this._CityMasters;
		}
		set
		{
			this._CityMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CompanyMaster", Storage="_CompanyMasters", ThisKey="StateId", OtherKey="StateId")]
	public EntitySet<CompanyMaster> CompanyMasters
	{
		get
		{
			return this._CompanyMasters;
		}
		set
		{
			this._CompanyMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_EmployeeMaster", Storage="_EmployeeMasters", ThisKey="StateId", OtherKey="StateId")]
	public EntitySet<EmployeeMaster> EmployeeMasters
	{
		get
		{
			return this._EmployeeMasters;
		}
		set
		{
			this._EmployeeMasters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_CityMasters(CityMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
	
	private void attach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_CompanyMasters(CompanyMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
	
	private void attach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = this;
	}
	
	private void detach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.StateMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdminId;
	
	private string _AdminName;
	
	private string _AdminPassword;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(int value);
    partial void OnAdminIdChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    partial void OnAdminPasswordChanging(string value);
    partial void OnAdminPasswordChanged();
    #endregion
	
	public Admin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string AdminName
	{
		get
		{
			return this._AdminName;
		}
		set
		{
			if ((this._AdminName != value))
			{
				this.OnAdminNameChanging(value);
				this.SendPropertyChanging();
				this._AdminName = value;
				this.SendPropertyChanged("AdminName");
				this.OnAdminNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPassword", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string AdminPassword
	{
		get
		{
			return this._AdminPassword;
		}
		set
		{
			if ((this._AdminPassword != value))
			{
				this.OnAdminPasswordChanging(value);
				this.SendPropertyChanging();
				this._AdminPassword = value;
				this.SendPropertyChanged("AdminPassword");
				this.OnAdminPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyTypeMaster")]
public partial class CompanyTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CompanytypeId;
	
	private string _CompanyType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanytypeIdChanging(int value);
    partial void OnCompanytypeIdChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    #endregion
	
	public CompanyTypeMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanytypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CompanytypeId
	{
		get
		{
			return this._CompanytypeId;
		}
		set
		{
			if ((this._CompanytypeId != value))
			{
				this.OnCompanytypeIdChanging(value);
				this.SendPropertyChanging();
				this._CompanytypeId = value;
				this.SendPropertyChanged("CompanytypeId");
				this.OnCompanytypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="VarChar(20)")]
	public string CompanyType
	{
		get
		{
			return this._CompanyType;
		}
		set
		{
			if ((this._CompanyType != value))
			{
				this.OnCompanyTypeChanging(value);
				this.SendPropertyChanging();
				this._CompanyType = value;
				this.SendPropertyChanged("CompanyType");
				this.OnCompanyTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Table]")]
public partial class Table : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<double> _Project_Completion;
	
	private System.Nullable<int> _Month;
	
	private System.Nullable<int> _ProjectId;
	
	private System.Nullable<int> _EmpId;
	
	private EntityRef<EmployeeMaster> _EmployeeMaster;
	
	private EntityRef<ProjectMaster> _ProjectMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProject_CompletionChanging(System.Nullable<double> value);
    partial void OnProject_CompletionChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnEmpIdChanging(System.Nullable<int> value);
    partial void OnEmpIdChanged();
    #endregion
	
	public Table()
	{
		this._EmployeeMaster = default(EntityRef<EmployeeMaster>);
		this._ProjectMaster = default(EntityRef<ProjectMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Completion", DbType="Float")]
	public System.Nullable<double> Project_Completion
	{
		get
		{
			return this._Project_Completion;
		}
		set
		{
			if ((this._Project_Completion != value))
			{
				this.OnProject_CompletionChanging(value);
				this.SendPropertyChanging();
				this._Project_Completion = value;
				this.SendPropertyChanged("Project_Completion");
				this.OnProject_CompletionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int")]
	public System.Nullable<int> Month
	{
		get
		{
			return this._Month;
		}
		set
		{
			if ((this._Month != value))
			{
				this.OnMonthChanging(value);
				this.SendPropertyChanging();
				this._Month = value;
				this.SendPropertyChanged("Month");
				this.OnMonthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
	public System.Nullable<int> ProjectId
	{
		get
		{
			return this._ProjectId;
		}
		set
		{
			if ((this._ProjectId != value))
			{
				if (this._ProjectMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProjectIdChanging(value);
				this.SendPropertyChanging();
				this._ProjectId = value;
				this.SendPropertyChanged("ProjectId");
				this.OnProjectIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				if (this._EmployeeMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_Table", Storage="_EmployeeMaster", ThisKey="EmpId", OtherKey="EmpId", IsForeignKey=true)]
	public EmployeeMaster EmployeeMaster
	{
		get
		{
			return this._EmployeeMaster.Entity;
		}
		set
		{
			EmployeeMaster previousValue = this._EmployeeMaster.Entity;
			if (((previousValue != value) 
						|| (this._EmployeeMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmployeeMaster.Entity = null;
					previousValue.Tables.Remove(this);
				}
				this._EmployeeMaster.Entity = value;
				if ((value != null))
				{
					value.Tables.Add(this);
					this._EmpId = value.EmpId;
				}
				else
				{
					this._EmpId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EmployeeMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMaster_Table", Storage="_ProjectMaster", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
	public ProjectMaster ProjectMaster
	{
		get
		{
			return this._ProjectMaster.Entity;
		}
		set
		{
			ProjectMaster previousValue = this._ProjectMaster.Entity;
			if (((previousValue != value) 
						|| (this._ProjectMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProjectMaster.Entity = null;
					previousValue.Tables.Remove(this);
				}
				this._ProjectMaster.Entity = value;
				if ((value != null))
				{
					value.Tables.Add(this);
					this._ProjectId = value.ProjectId;
				}
				else
				{
					this._ProjectId = default(Nullable<int>);
				}
				this.SendPropertyChanged("ProjectMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyMaster")]
public partial class CompanyMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CompanyId;
	
	private string _CompanyName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId;
	
	private System.Nullable<int> _StateId;
	
	private string _MobileNo;
	
	private string _Phone;
	
	private string _FaxNo;
	
	private string _Email;
	
	private string _Website;
	
	private string _Photo;
	
	private System.Nullable<int> _EmpStrenght;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<int> _CompanyTypeId;
	
	private string _pwd;
	
	private EntitySet<NewsMaster> _NewsMasters;
	
	private EntitySet<EventMaster> _EventMasters;
	
	private EntitySet<EmployeeMaster> _EmployeeMasters;
	
	private EntitySet<AllProject> _AllProjects;
	
	private EntitySet<ProjectMaster> _ProjectMasters;
	
	private EntityRef<CityMaster> _CityMaster;
	
	private EntityRef<StateMaster> _StateMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnAddresChanging(string value);
    partial void OnAddresChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxNoChanging(string value);
    partial void OnFaxNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnEmpStrenghtChanging(System.Nullable<int> value);
    partial void OnEmpStrenghtChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnCompanyTypeIdChanging(System.Nullable<int> value);
    partial void OnCompanyTypeIdChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    #endregion
	
	public CompanyMaster()
	{
		this._NewsMasters = new EntitySet<NewsMaster>(new Action<NewsMaster>(this.attach_NewsMasters), new Action<NewsMaster>(this.detach_NewsMasters));
		this._EventMasters = new EntitySet<EventMaster>(new Action<EventMaster>(this.attach_EventMasters), new Action<EventMaster>(this.detach_EventMasters));
		this._EmployeeMasters = new EntitySet<EmployeeMaster>(new Action<EmployeeMaster>(this.attach_EmployeeMasters), new Action<EmployeeMaster>(this.detach_EmployeeMasters));
		this._AllProjects = new EntitySet<AllProject>(new Action<AllProject>(this.attach_AllProjects), new Action<AllProject>(this.detach_AllProjects));
		this._ProjectMasters = new EntitySet<ProjectMaster>(new Action<ProjectMaster>(this.attach_ProjectMasters), new Action<ProjectMaster>(this.detach_ProjectMasters));
		this._CityMaster = default(EntityRef<CityMaster>);
		this._StateMaster = default(EntityRef<StateMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this.OnCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyId = value;
				this.SendPropertyChanged("CompanyId");
				this.OnCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(20)")]
	public string CompanyName
	{
		get
		{
			return this._CompanyName;
		}
		set
		{
			if ((this._CompanyName != value))
			{
				this.OnCompanyNameChanging(value);
				this.SendPropertyChanging();
				this._CompanyName = value;
				this.SendPropertyChanged("CompanyName");
				this.OnCompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this.OnAddresChanging(value);
				this.SendPropertyChanging();
				this._Addres = value;
				this.SendPropertyChanged("Addres");
				this.OnAddresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				if (this._CityMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCityIdChanging(value);
				this.SendPropertyChanging();
				this._CityId = value;
				this.SendPropertyChanged("CityId");
				this.OnCityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this.OnMobileNoChanging(value);
				this.SendPropertyChanging();
				this._MobileNo = value;
				this.SendPropertyChanged("MobileNo");
				this.OnMobileNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNo", DbType="VarChar(10)")]
	public string FaxNo
	{
		get
		{
			return this._FaxNo;
		}
		set
		{
			if ((this._FaxNo != value))
			{
				this.OnFaxNoChanging(value);
				this.SendPropertyChanging();
				this._FaxNo = value;
				this.SendPropertyChanged("FaxNo");
				this.OnFaxNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(20)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarChar(250)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this.OnPhotoChanging(value);
				this.SendPropertyChanging();
				this._Photo = value;
				this.SendPropertyChanged("Photo");
				this.OnPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStrenght", DbType="Int")]
	public System.Nullable<int> EmpStrenght
	{
		get
		{
			return this._EmpStrenght;
		}
		set
		{
			if ((this._EmpStrenght != value))
			{
				this.OnEmpStrenghtChanging(value);
				this.SendPropertyChanging();
				this._EmpStrenght = value;
				this.SendPropertyChanged("EmpStrenght");
				this.OnEmpStrenghtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTypeId", DbType="Int")]
	public System.Nullable<int> CompanyTypeId
	{
		get
		{
			return this._CompanyTypeId;
		}
		set
		{
			if ((this._CompanyTypeId != value))
			{
				this.OnCompanyTypeIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyTypeId = value;
				this.SendPropertyChanged("CompanyTypeId");
				this.OnCompanyTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(10)")]
	public string pwd
	{
		get
		{
			return this._pwd;
		}
		set
		{
			if ((this._pwd != value))
			{
				this.OnpwdChanging(value);
				this.SendPropertyChanging();
				this._pwd = value;
				this.SendPropertyChanged("pwd");
				this.OnpwdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_NewsMaster", Storage="_NewsMasters", ThisKey="CompanyId", OtherKey="CompanyId")]
	public EntitySet<NewsMaster> NewsMasters
	{
		get
		{
			return this._NewsMasters;
		}
		set
		{
			this._NewsMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_EventMaster", Storage="_EventMasters", ThisKey="CompanyId", OtherKey="Company_Id")]
	public EntitySet<EventMaster> EventMasters
	{
		get
		{
			return this._EventMasters;
		}
		set
		{
			this._EventMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_EmployeeMaster", Storage="_EmployeeMasters", ThisKey="CompanyId", OtherKey="CompanyId")]
	public EntitySet<EmployeeMaster> EmployeeMasters
	{
		get
		{
			return this._EmployeeMasters;
		}
		set
		{
			this._EmployeeMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_AllProject", Storage="_AllProjects", ThisKey="CompanyId", OtherKey="CompanyId")]
	public EntitySet<AllProject> AllProjects
	{
		get
		{
			return this._AllProjects;
		}
		set
		{
			this._AllProjects.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_ProjectMaster", Storage="_ProjectMasters", ThisKey="CompanyId", OtherKey="CompanyId")]
	public EntitySet<ProjectMaster> ProjectMasters
	{
		get
		{
			return this._ProjectMasters;
		}
		set
		{
			this._ProjectMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_CompanyMaster", Storage="_CityMaster", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
	public CityMaster CityMaster
	{
		get
		{
			return this._CityMaster.Entity;
		}
		set
		{
			CityMaster previousValue = this._CityMaster.Entity;
			if (((previousValue != value) 
						|| (this._CityMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CityMaster.Entity = null;
					previousValue.CompanyMasters.Remove(this);
				}
				this._CityMaster.Entity = value;
				if ((value != null))
				{
					value.CompanyMasters.Add(this);
					this._CityId = value.CityId;
				}
				else
				{
					this._CityId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CityMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_CompanyMaster", Storage="_StateMaster", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.CompanyMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.CompanyMasters.Add(this);
					this._StateId = value.StateId;
				}
				else
				{
					this._StateId = default(Nullable<int>);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_NewsMasters(NewsMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_NewsMasters(NewsMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
	
	private void attach_EventMasters(EventMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_EventMasters(EventMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
	
	private void attach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_EmployeeMasters(EmployeeMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
	
	private void attach_AllProjects(AllProject entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_AllProjects(AllProject entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
	
	private void attach_ProjectMasters(ProjectMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = this;
	}
	
	private void detach_ProjectMasters(ProjectMaster entity)
	{
		this.SendPropertyChanging();
		entity.CompanyMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventMaster")]
public partial class EventMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EventId;
	
	private System.Nullable<System.DateTime> _EventDate;
	
	private string _EventName;
	
	private System.Nullable<int> _Company_Id;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnEventDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEventDateChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnCompany_IdChanging(System.Nullable<int> value);
    partial void OnCompany_IdChanged();
    #endregion
	
	public EventMaster()
	{
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="Date")]
	public System.Nullable<System.DateTime> EventDate
	{
		get
		{
			return this._EventDate;
		}
		set
		{
			if ((this._EventDate != value))
			{
				this.OnEventDateChanging(value);
				this.SendPropertyChanging();
				this._EventDate = value;
				this.SendPropertyChanged("EventDate");
				this.OnEventDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(20)")]
	public string EventName
	{
		get
		{
			return this._EventName;
		}
		set
		{
			if ((this._EventName != value))
			{
				this.OnEventNameChanging(value);
				this.SendPropertyChanging();
				this._EventName = value;
				this.SendPropertyChanged("EventName");
				this.OnEventNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Id]", Storage="_Company_Id", DbType="Int")]
	public System.Nullable<int> Company_Id
	{
		get
		{
			return this._Company_Id;
		}
		set
		{
			if ((this._Company_Id != value))
			{
				this.OnCompany_IdChanging(value);
				this.SendPropertyChanging();
				this._Company_Id = value;
				this.SendPropertyChanged("Company_Id");
				this.OnCompany_IdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_EventMaster", Storage="_CompanyMaster", ThisKey="Company_Id", OtherKey="CompanyId", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.EventMasters.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.EventMasters.Add(this);
					this._Company_Id = value.CompanyId;
				}
				else
				{
					this._Company_Id = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeMaster")]
public partial class EmployeeMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmpId;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId;
	
	private System.Nullable<int> _StateId;
	
	private string _MobileNo;
	
	private string _Email;
	
	private string _Passwrd;
	
	private string _Photo;
	
	private System.Nullable<int> _DegId;
	
	private string _Dob;
	
	private string _JoinDate;
	
	private System.Nullable<int> _CompanyId;
	
	private EntitySet<Table> _Tables;
	
	private EntitySet<TaskMaster> _TaskMasters;
	
	private EntitySet<ProjectMaster> _ProjectMasters;
	
	private EntitySet<BugMaster> _BugMasters;
	
	private EntitySet<LeaveMaster> _LeaveMasters;
	
	private EntityRef<CityMaster> _CityMaster;
	
	private EntityRef<DesignationMaster> _DesignationMaster;
	
	private EntityRef<StateMaster> _StateMaster;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIdChanging(int value);
    partial void OnEmpIdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnMNameChanging(string value);
    partial void OnMNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnAddresChanging(string value);
    partial void OnAddresChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    partial void OnStateIdChanging(System.Nullable<int> value);
    partial void OnStateIdChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswrdChanging(string value);
    partial void OnPasswrdChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnDegIdChanging(System.Nullable<int> value);
    partial void OnDegIdChanged();
    partial void OnDobChanging(string value);
    partial void OnDobChanged();
    partial void OnJoinDateChanging(string value);
    partial void OnJoinDateChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    #endregion
	
	public EmployeeMaster()
	{
		this._Tables = new EntitySet<Table>(new Action<Table>(this.attach_Tables), new Action<Table>(this.detach_Tables));
		this._TaskMasters = new EntitySet<TaskMaster>(new Action<TaskMaster>(this.attach_TaskMasters), new Action<TaskMaster>(this.detach_TaskMasters));
		this._ProjectMasters = new EntitySet<ProjectMaster>(new Action<ProjectMaster>(this.attach_ProjectMasters), new Action<ProjectMaster>(this.detach_ProjectMasters));
		this._BugMasters = new EntitySet<BugMaster>(new Action<BugMaster>(this.attach_BugMasters), new Action<BugMaster>(this.detach_BugMasters));
		this._LeaveMasters = new EntitySet<LeaveMaster>(new Action<LeaveMaster>(this.attach_LeaveMasters), new Action<LeaveMaster>(this.detach_LeaveMasters));
		this._CityMaster = default(EntityRef<CityMaster>);
		this._DesignationMaster = default(EntityRef<DesignationMaster>);
		this._StateMaster = default(EntityRef<StateMaster>);
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(10)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this.OnFNameChanging(value);
				this.SendPropertyChanging();
				this._FName = value;
				this.SendPropertyChanged("FName");
				this.OnFNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(10)")]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this.OnMNameChanging(value);
				this.SendPropertyChanging();
				this._MName = value;
				this.SendPropertyChanged("MName");
				this.OnMNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(10)")]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this.OnLNameChanging(value);
				this.SendPropertyChanging();
				this._LName = value;
				this.SendPropertyChanged("LName");
				this.OnLNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this.OnAddresChanging(value);
				this.SendPropertyChanging();
				this._Addres = value;
				this.SendPropertyChanged("Addres");
				this.OnAddresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				if (this._CityMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCityIdChanging(value);
				this.SendPropertyChanging();
				this._CityId = value;
				this.SendPropertyChanged("CityId");
				this.OnCityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				if (this._StateMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this.OnMobileNoChanging(value);
				this.SendPropertyChanging();
				this._MobileNo = value;
				this.SendPropertyChanged("MobileNo");
				this.OnMobileNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwrd", DbType="VarChar(18)")]
	public string Passwrd
	{
		get
		{
			return this._Passwrd;
		}
		set
		{
			if ((this._Passwrd != value))
			{
				this.OnPasswrdChanging(value);
				this.SendPropertyChanging();
				this._Passwrd = value;
				this.SendPropertyChanged("Passwrd");
				this.OnPasswrdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this.OnPhotoChanging(value);
				this.SendPropertyChanging();
				this._Photo = value;
				this.SendPropertyChanged("Photo");
				this.OnPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", DbType="Int")]
	public System.Nullable<int> DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				if (this._DesignationMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDegIdChanging(value);
				this.SendPropertyChanging();
				this._DegId = value;
				this.SendPropertyChanged("DegId");
				this.OnDegIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="VarChar(50)")]
	public string Dob
	{
		get
		{
			return this._Dob;
		}
		set
		{
			if ((this._Dob != value))
			{
				this.OnDobChanging(value);
				this.SendPropertyChanging();
				this._Dob = value;
				this.SendPropertyChanged("Dob");
				this.OnDobChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="VarChar(50)")]
	public string JoinDate
	{
		get
		{
			return this._JoinDate;
		}
		set
		{
			if ((this._JoinDate != value))
			{
				this.OnJoinDateChanging(value);
				this.SendPropertyChanging();
				this._JoinDate = value;
				this.SendPropertyChanged("JoinDate");
				this.OnJoinDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				if (this._CompanyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyId = value;
				this.SendPropertyChanged("CompanyId");
				this.OnCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_Table", Storage="_Tables", ThisKey="EmpId", OtherKey="EmpId")]
	public EntitySet<Table> Tables
	{
		get
		{
			return this._Tables;
		}
		set
		{
			this._Tables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_TaskMaster", Storage="_TaskMasters", ThisKey="EmpId", OtherKey="EmpId")]
	public EntitySet<TaskMaster> TaskMasters
	{
		get
		{
			return this._TaskMasters;
		}
		set
		{
			this._TaskMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_ProjectMaster", Storage="_ProjectMasters", ThisKey="EmpId", OtherKey="EmpId")]
	public EntitySet<ProjectMaster> ProjectMasters
	{
		get
		{
			return this._ProjectMasters;
		}
		set
		{
			this._ProjectMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_BugMaster", Storage="_BugMasters", ThisKey="EmpId", OtherKey="EmpId")]
	public EntitySet<BugMaster> BugMasters
	{
		get
		{
			return this._BugMasters;
		}
		set
		{
			this._BugMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_LeaveMaster", Storage="_LeaveMasters", ThisKey="EmpId", OtherKey="EmpId")]
	public EntitySet<LeaveMaster> LeaveMasters
	{
		get
		{
			return this._LeaveMasters;
		}
		set
		{
			this._LeaveMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityMaster_EmployeeMaster", Storage="_CityMaster", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
	public CityMaster CityMaster
	{
		get
		{
			return this._CityMaster.Entity;
		}
		set
		{
			CityMaster previousValue = this._CityMaster.Entity;
			if (((previousValue != value) 
						|| (this._CityMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CityMaster.Entity = null;
					previousValue.EmployeeMasters.Remove(this);
				}
				this._CityMaster.Entity = value;
				if ((value != null))
				{
					value.EmployeeMasters.Add(this);
					this._CityId = value.CityId;
				}
				else
				{
					this._CityId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CityMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DesignationMaster_EmployeeMaster", Storage="_DesignationMaster", ThisKey="DegId", OtherKey="DegId", IsForeignKey=true)]
	public DesignationMaster DesignationMaster
	{
		get
		{
			return this._DesignationMaster.Entity;
		}
		set
		{
			DesignationMaster previousValue = this._DesignationMaster.Entity;
			if (((previousValue != value) 
						|| (this._DesignationMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DesignationMaster.Entity = null;
					previousValue.EmployeeMasters.Remove(this);
				}
				this._DesignationMaster.Entity = value;
				if ((value != null))
				{
					value.EmployeeMasters.Add(this);
					this._DegId = value.DegId;
				}
				else
				{
					this._DegId = default(Nullable<int>);
				}
				this.SendPropertyChanged("DesignationMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateMaster_EmployeeMaster", Storage="_StateMaster", ThisKey="StateId", OtherKey="StateId", IsForeignKey=true)]
	public StateMaster StateMaster
	{
		get
		{
			return this._StateMaster.Entity;
		}
		set
		{
			StateMaster previousValue = this._StateMaster.Entity;
			if (((previousValue != value) 
						|| (this._StateMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._StateMaster.Entity = null;
					previousValue.EmployeeMasters.Remove(this);
				}
				this._StateMaster.Entity = value;
				if ((value != null))
				{
					value.EmployeeMasters.Add(this);
					this._StateId = value.StateId;
				}
				else
				{
					this._StateId = default(Nullable<int>);
				}
				this.SendPropertyChanged("StateMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_EmployeeMaster", Storage="_CompanyMaster", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.EmployeeMasters.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.EmployeeMasters.Add(this);
					this._CompanyId = value.CompanyId;
				}
				else
				{
					this._CompanyId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Tables(Table entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = this;
	}
	
	private void detach_Tables(Table entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = null;
	}
	
	private void attach_TaskMasters(TaskMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = this;
	}
	
	private void detach_TaskMasters(TaskMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = null;
	}
	
	private void attach_ProjectMasters(ProjectMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = this;
	}
	
	private void detach_ProjectMasters(ProjectMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = null;
	}
	
	private void attach_BugMasters(BugMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = this;
	}
	
	private void detach_BugMasters(BugMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = null;
	}
	
	private void attach_LeaveMasters(LeaveMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = this;
	}
	
	private void detach_LeaveMasters(LeaveMaster entity)
	{
		this.SendPropertyChanging();
		entity.EmployeeMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllProject")]
public partial class AllProject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Pid;
	
	private string _ProjectNameAll;
	
	private System.Nullable<int> _CompanyId;
	
	private EntitySet<ProjectMaster> _ProjectMasters;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPidChanging(int value);
    partial void OnPidChanged();
    partial void OnProjectNameAllChanging(string value);
    partial void OnProjectNameAllChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    #endregion
	
	public AllProject()
	{
		this._ProjectMasters = new EntitySet<ProjectMaster>(new Action<ProjectMaster>(this.attach_ProjectMasters), new Action<ProjectMaster>(this.detach_ProjectMasters));
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Pid
	{
		get
		{
			return this._Pid;
		}
		set
		{
			if ((this._Pid != value))
			{
				this.OnPidChanging(value);
				this.SendPropertyChanging();
				this._Pid = value;
				this.SendPropertyChanged("Pid");
				this.OnPidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNameAll", DbType="VarChar(50)")]
	public string ProjectNameAll
	{
		get
		{
			return this._ProjectNameAll;
		}
		set
		{
			if ((this._ProjectNameAll != value))
			{
				this.OnProjectNameAllChanging(value);
				this.SendPropertyChanging();
				this._ProjectNameAll = value;
				this.SendPropertyChanged("ProjectNameAll");
				this.OnProjectNameAllChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				if (this._CompanyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyId = value;
				this.SendPropertyChanged("CompanyId");
				this.OnCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllProject_ProjectMaster", Storage="_ProjectMasters", ThisKey="Pid", OtherKey="Pid")]
	public EntitySet<ProjectMaster> ProjectMasters
	{
		get
		{
			return this._ProjectMasters;
		}
		set
		{
			this._ProjectMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_AllProject", Storage="_CompanyMaster", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.AllProjects.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.AllProjects.Add(this);
					this._CompanyId = value.CompanyId;
				}
				else
				{
					this._CompanyId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ProjectMasters(ProjectMaster entity)
	{
		this.SendPropertyChanging();
		entity.AllProject = this;
	}
	
	private void detach_ProjectMasters(ProjectMaster entity)
	{
		this.SendPropertyChanging();
		entity.AllProject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskMaster")]
public partial class TaskMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TaskId;
	
	private string _TaskName;
	
	private System.Nullable<int> _ProjectId;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _TaskStatus;
	
	private System.Nullable<System.DateTime> _TaskDate;
	
	private System.Nullable<int> _EmpId;
	
	private EntitySet<BugMaster> _BugMasters;
	
	private EntityRef<EmployeeMaster> _EmployeeMaster;
	
	private EntityRef<ProjectMaster> _ProjectMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIdChanging(int value);
    partial void OnTaskIdChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnTaskStatusChanging(string value);
    partial void OnTaskStatusChanged();
    partial void OnTaskDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskDateChanged();
    partial void OnEmpIdChanging(System.Nullable<int> value);
    partial void OnEmpIdChanged();
    #endregion
	
	public TaskMaster()
	{
		this._BugMasters = new EntitySet<BugMaster>(new Action<BugMaster>(this.attach_BugMasters), new Action<BugMaster>(this.detach_BugMasters));
		this._EmployeeMaster = default(EntityRef<EmployeeMaster>);
		this._ProjectMaster = default(EntityRef<ProjectMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TaskId
	{
		get
		{
			return this._TaskId;
		}
		set
		{
			if ((this._TaskId != value))
			{
				this.OnTaskIdChanging(value);
				this.SendPropertyChanging();
				this._TaskId = value;
				this.SendPropertyChanged("TaskId");
				this.OnTaskIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="VarChar(20)")]
	public string TaskName
	{
		get
		{
			return this._TaskName;
		}
		set
		{
			if ((this._TaskName != value))
			{
				this.OnTaskNameChanging(value);
				this.SendPropertyChanging();
				this._TaskName = value;
				this.SendPropertyChanged("TaskName");
				this.OnTaskNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
	public System.Nullable<int> ProjectId
	{
		get
		{
			return this._ProjectId;
		}
		set
		{
			if ((this._ProjectId != value))
			{
				if (this._ProjectMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProjectIdChanging(value);
				this.SendPropertyChanging();
				this._ProjectId = value;
				this.SendPropertyChanged("ProjectId");
				this.OnProjectIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatus", DbType="VarChar(30)")]
	public string TaskStatus
	{
		get
		{
			return this._TaskStatus;
		}
		set
		{
			if ((this._TaskStatus != value))
			{
				this.OnTaskStatusChanging(value);
				this.SendPropertyChanging();
				this._TaskStatus = value;
				this.SendPropertyChanged("TaskStatus");
				this.OnTaskStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDate", DbType="Date")]
	public System.Nullable<System.DateTime> TaskDate
	{
		get
		{
			return this._TaskDate;
		}
		set
		{
			if ((this._TaskDate != value))
			{
				this.OnTaskDateChanging(value);
				this.SendPropertyChanging();
				this._TaskDate = value;
				this.SendPropertyChanged("TaskDate");
				this.OnTaskDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				if (this._EmployeeMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskMaster_BugMaster", Storage="_BugMasters", ThisKey="TaskId", OtherKey="TaskId")]
	public EntitySet<BugMaster> BugMasters
	{
		get
		{
			return this._BugMasters;
		}
		set
		{
			this._BugMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_TaskMaster", Storage="_EmployeeMaster", ThisKey="EmpId", OtherKey="EmpId", IsForeignKey=true)]
	public EmployeeMaster EmployeeMaster
	{
		get
		{
			return this._EmployeeMaster.Entity;
		}
		set
		{
			EmployeeMaster previousValue = this._EmployeeMaster.Entity;
			if (((previousValue != value) 
						|| (this._EmployeeMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmployeeMaster.Entity = null;
					previousValue.TaskMasters.Remove(this);
				}
				this._EmployeeMaster.Entity = value;
				if ((value != null))
				{
					value.TaskMasters.Add(this);
					this._EmpId = value.EmpId;
				}
				else
				{
					this._EmpId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EmployeeMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMaster_TaskMaster", Storage="_ProjectMaster", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
	public ProjectMaster ProjectMaster
	{
		get
		{
			return this._ProjectMaster.Entity;
		}
		set
		{
			ProjectMaster previousValue = this._ProjectMaster.Entity;
			if (((previousValue != value) 
						|| (this._ProjectMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ProjectMaster.Entity = null;
					previousValue.TaskMasters.Remove(this);
				}
				this._ProjectMaster.Entity = value;
				if ((value != null))
				{
					value.TaskMasters.Add(this);
					this._ProjectId = value.ProjectId;
				}
				else
				{
					this._ProjectId = default(Nullable<int>);
				}
				this.SendPropertyChanged("ProjectMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BugMasters(BugMaster entity)
	{
		this.SendPropertyChanging();
		entity.TaskMaster = this;
	}
	
	private void detach_BugMasters(BugMaster entity)
	{
		this.SendPropertyChanging();
		entity.TaskMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectMaster")]
public partial class ProjectMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProjectId;
	
	private string _Discription;
	
	private System.Nullable<System.DateTime> _ProjectDate;
	
	private System.Nullable<int> _EmpId;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _Enddate;
	
	private System.Nullable<int> _No_Of_Days;
	
	private System.Nullable<int> _CompanyId;
	
	private System.Nullable<int> _Pid;
	
	private EntitySet<Table> _Tables;
	
	private EntitySet<TaskMaster> _TaskMasters;
	
	private EntityRef<EmployeeMaster> _EmployeeMaster;
	
	private EntityRef<AllProject> _AllProject;
	
	private EntityRef<CompanyMaster> _CompanyMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnDiscriptionChanging(string value);
    partial void OnDiscriptionChanged();
    partial void OnProjectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProjectDateChanged();
    partial void OnEmpIdChanging(System.Nullable<int> value);
    partial void OnEmpIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEnddateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnddateChanged();
    partial void OnNo_Of_DaysChanging(System.Nullable<int> value);
    partial void OnNo_Of_DaysChanged();
    partial void OnCompanyIdChanging(System.Nullable<int> value);
    partial void OnCompanyIdChanged();
    partial void OnPidChanging(System.Nullable<int> value);
    partial void OnPidChanged();
    #endregion
	
	public ProjectMaster()
	{
		this._Tables = new EntitySet<Table>(new Action<Table>(this.attach_Tables), new Action<Table>(this.detach_Tables));
		this._TaskMasters = new EntitySet<TaskMaster>(new Action<TaskMaster>(this.attach_TaskMasters), new Action<TaskMaster>(this.detach_TaskMasters));
		this._EmployeeMaster = default(EntityRef<EmployeeMaster>);
		this._AllProject = default(EntityRef<AllProject>);
		this._CompanyMaster = default(EntityRef<CompanyMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ProjectId
	{
		get
		{
			return this._ProjectId;
		}
		set
		{
			if ((this._ProjectId != value))
			{
				this.OnProjectIdChanging(value);
				this.SendPropertyChanging();
				this._ProjectId = value;
				this.SendPropertyChanged("ProjectId");
				this.OnProjectIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="VarChar(150)")]
	public string Discription
	{
		get
		{
			return this._Discription;
		}
		set
		{
			if ((this._Discription != value))
			{
				this.OnDiscriptionChanging(value);
				this.SendPropertyChanging();
				this._Discription = value;
				this.SendPropertyChanged("Discription");
				this.OnDiscriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ProjectDate
	{
		get
		{
			return this._ProjectDate;
		}
		set
		{
			if ((this._ProjectDate != value))
			{
				this.OnProjectDateChanging(value);
				this.SendPropertyChanging();
				this._ProjectDate = value;
				this.SendPropertyChanged("ProjectDate");
				this.OnProjectDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				if (this._EmployeeMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enddate", DbType="DateTime")]
	public System.Nullable<System.DateTime> Enddate
	{
		get
		{
			return this._Enddate;
		}
		set
		{
			if ((this._Enddate != value))
			{
				this.OnEnddateChanging(value);
				this.SendPropertyChanging();
				this._Enddate = value;
				this.SendPropertyChanged("Enddate");
				this.OnEnddateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Of_Days", DbType="Int")]
	public System.Nullable<int> No_Of_Days
	{
		get
		{
			return this._No_Of_Days;
		}
		set
		{
			if ((this._No_Of_Days != value))
			{
				this.OnNo_Of_DaysChanging(value);
				this.SendPropertyChanging();
				this._No_Of_Days = value;
				this.SendPropertyChanged("No_Of_Days");
				this.OnNo_Of_DaysChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				if (this._CompanyMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCompanyIdChanging(value);
				this.SendPropertyChanging();
				this._CompanyId = value;
				this.SendPropertyChanged("CompanyId");
				this.OnCompanyIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int")]
	public System.Nullable<int> Pid
	{
		get
		{
			return this._Pid;
		}
		set
		{
			if ((this._Pid != value))
			{
				if (this._AllProject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPidChanging(value);
				this.SendPropertyChanging();
				this._Pid = value;
				this.SendPropertyChanged("Pid");
				this.OnPidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMaster_Table", Storage="_Tables", ThisKey="ProjectId", OtherKey="ProjectId")]
	public EntitySet<Table> Tables
	{
		get
		{
			return this._Tables;
		}
		set
		{
			this._Tables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectMaster_TaskMaster", Storage="_TaskMasters", ThisKey="ProjectId", OtherKey="ProjectId")]
	public EntitySet<TaskMaster> TaskMasters
	{
		get
		{
			return this._TaskMasters;
		}
		set
		{
			this._TaskMasters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_ProjectMaster", Storage="_EmployeeMaster", ThisKey="EmpId", OtherKey="EmpId", IsForeignKey=true)]
	public EmployeeMaster EmployeeMaster
	{
		get
		{
			return this._EmployeeMaster.Entity;
		}
		set
		{
			EmployeeMaster previousValue = this._EmployeeMaster.Entity;
			if (((previousValue != value) 
						|| (this._EmployeeMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmployeeMaster.Entity = null;
					previousValue.ProjectMasters.Remove(this);
				}
				this._EmployeeMaster.Entity = value;
				if ((value != null))
				{
					value.ProjectMasters.Add(this);
					this._EmpId = value.EmpId;
				}
				else
				{
					this._EmpId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EmployeeMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllProject_ProjectMaster", Storage="_AllProject", ThisKey="Pid", OtherKey="Pid", IsForeignKey=true)]
	public AllProject AllProject
	{
		get
		{
			return this._AllProject.Entity;
		}
		set
		{
			AllProject previousValue = this._AllProject.Entity;
			if (((previousValue != value) 
						|| (this._AllProject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AllProject.Entity = null;
					previousValue.ProjectMasters.Remove(this);
				}
				this._AllProject.Entity = value;
				if ((value != null))
				{
					value.ProjectMasters.Add(this);
					this._Pid = value.Pid;
				}
				else
				{
					this._Pid = default(Nullable<int>);
				}
				this.SendPropertyChanged("AllProject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyMaster_ProjectMaster", Storage="_CompanyMaster", ThisKey="CompanyId", OtherKey="CompanyId", IsForeignKey=true)]
	public CompanyMaster CompanyMaster
	{
		get
		{
			return this._CompanyMaster.Entity;
		}
		set
		{
			CompanyMaster previousValue = this._CompanyMaster.Entity;
			if (((previousValue != value) 
						|| (this._CompanyMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CompanyMaster.Entity = null;
					previousValue.ProjectMasters.Remove(this);
				}
				this._CompanyMaster.Entity = value;
				if ((value != null))
				{
					value.ProjectMasters.Add(this);
					this._CompanyId = value.CompanyId;
				}
				else
				{
					this._CompanyId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CompanyMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Tables(Table entity)
	{
		this.SendPropertyChanging();
		entity.ProjectMaster = this;
	}
	
	private void detach_Tables(Table entity)
	{
		this.SendPropertyChanging();
		entity.ProjectMaster = null;
	}
	
	private void attach_TaskMasters(TaskMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProjectMaster = this;
	}
	
	private void detach_TaskMasters(TaskMaster entity)
	{
		this.SendPropertyChanging();
		entity.ProjectMaster = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BugMaster")]
public partial class BugMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BugId;
	
	private string _BugName;
	
	private System.Nullable<int> _EmpId;
	
	private System.Nullable<int> _TaskId;
	
	private System.Nullable<System.DateTime> _BugDate;
	
	private string _Solution;
	
	private EntityRef<EmployeeMaster> _EmployeeMaster;
	
	private EntityRef<TaskMaster> _TaskMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBugIdChanging(int value);
    partial void OnBugIdChanged();
    partial void OnBugNameChanging(string value);
    partial void OnBugNameChanged();
    partial void OnEmpIdChanging(System.Nullable<int> value);
    partial void OnEmpIdChanged();
    partial void OnTaskIdChanging(System.Nullable<int> value);
    partial void OnTaskIdChanged();
    partial void OnBugDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBugDateChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    #endregion
	
	public BugMaster()
	{
		this._EmployeeMaster = default(EntityRef<EmployeeMaster>);
		this._TaskMaster = default(EntityRef<TaskMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BugId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BugId
	{
		get
		{
			return this._BugId;
		}
		set
		{
			if ((this._BugId != value))
			{
				this.OnBugIdChanging(value);
				this.SendPropertyChanging();
				this._BugId = value;
				this.SendPropertyChanged("BugId");
				this.OnBugIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BugName", DbType="VarChar(100)")]
	public string BugName
	{
		get
		{
			return this._BugName;
		}
		set
		{
			if ((this._BugName != value))
			{
				this.OnBugNameChanging(value);
				this.SendPropertyChanging();
				this._BugName = value;
				this.SendPropertyChanged("BugName");
				this.OnBugNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				if (this._EmployeeMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int")]
	public System.Nullable<int> TaskId
	{
		get
		{
			return this._TaskId;
		}
		set
		{
			if ((this._TaskId != value))
			{
				if (this._TaskMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTaskIdChanging(value);
				this.SendPropertyChanging();
				this._TaskId = value;
				this.SendPropertyChanged("TaskId");
				this.OnTaskIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BugDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> BugDate
	{
		get
		{
			return this._BugDate;
		}
		set
		{
			if ((this._BugDate != value))
			{
				this.OnBugDateChanging(value);
				this.SendPropertyChanging();
				this._BugDate = value;
				this.SendPropertyChanged("BugDate");
				this.OnBugDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solution", DbType="VarChar(150)")]
	public string Solution
	{
		get
		{
			return this._Solution;
		}
		set
		{
			if ((this._Solution != value))
			{
				this.OnSolutionChanging(value);
				this.SendPropertyChanging();
				this._Solution = value;
				this.SendPropertyChanged("Solution");
				this.OnSolutionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_BugMaster", Storage="_EmployeeMaster", ThisKey="EmpId", OtherKey="EmpId", IsForeignKey=true)]
	public EmployeeMaster EmployeeMaster
	{
		get
		{
			return this._EmployeeMaster.Entity;
		}
		set
		{
			EmployeeMaster previousValue = this._EmployeeMaster.Entity;
			if (((previousValue != value) 
						|| (this._EmployeeMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmployeeMaster.Entity = null;
					previousValue.BugMasters.Remove(this);
				}
				this._EmployeeMaster.Entity = value;
				if ((value != null))
				{
					value.BugMasters.Add(this);
					this._EmpId = value.EmpId;
				}
				else
				{
					this._EmpId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EmployeeMaster");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskMaster_BugMaster", Storage="_TaskMaster", ThisKey="TaskId", OtherKey="TaskId", IsForeignKey=true)]
	public TaskMaster TaskMaster
	{
		get
		{
			return this._TaskMaster.Entity;
		}
		set
		{
			TaskMaster previousValue = this._TaskMaster.Entity;
			if (((previousValue != value) 
						|| (this._TaskMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TaskMaster.Entity = null;
					previousValue.BugMasters.Remove(this);
				}
				this._TaskMaster.Entity = value;
				if ((value != null))
				{
					value.BugMasters.Add(this);
					this._TaskId = value.TaskId;
				}
				else
				{
					this._TaskId = default(Nullable<int>);
				}
				this.SendPropertyChanged("TaskMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveMaster")]
public partial class LeaveMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _LeaveId;
	
	private string _LeaveReason;
	
	private System.Nullable<System.DateTime> _LeaveDate;
	
	private System.Nullable<System.DateTime> _StartLeaveDate;
	
	private System.Nullable<System.DateTime> _EndLeaveDate;
	
	private string _LeaveStatus;
	
	private System.Nullable<int> _EmpId;
	
	private EntityRef<EmployeeMaster> _EmployeeMaster;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveIdChanging(int value);
    partial void OnLeaveIdChanged();
    partial void OnLeaveReasonChanging(string value);
    partial void OnLeaveReasonChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnStartLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartLeaveDateChanged();
    partial void OnEndLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndLeaveDateChanged();
    partial void OnLeaveStatusChanging(string value);
    partial void OnLeaveStatusChanged();
    partial void OnEmpIdChanging(System.Nullable<int> value);
    partial void OnEmpIdChanged();
    #endregion
	
	public LeaveMaster()
	{
		this._EmployeeMaster = default(EntityRef<EmployeeMaster>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int LeaveId
	{
		get
		{
			return this._LeaveId;
		}
		set
		{
			if ((this._LeaveId != value))
			{
				this.OnLeaveIdChanging(value);
				this.SendPropertyChanging();
				this._LeaveId = value;
				this.SendPropertyChanged("LeaveId");
				this.OnLeaveIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveReason", DbType="VarChar(200)")]
	public string LeaveReason
	{
		get
		{
			return this._LeaveReason;
		}
		set
		{
			if ((this._LeaveReason != value))
			{
				this.OnLeaveReasonChanging(value);
				this.SendPropertyChanging();
				this._LeaveReason = value;
				this.SendPropertyChanged("LeaveReason");
				this.OnLeaveReasonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LeaveDate
	{
		get
		{
			return this._LeaveDate;
		}
		set
		{
			if ((this._LeaveDate != value))
			{
				this.OnLeaveDateChanging(value);
				this.SendPropertyChanging();
				this._LeaveDate = value;
				this.SendPropertyChanged("LeaveDate");
				this.OnLeaveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLeaveDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartLeaveDate
	{
		get
		{
			return this._StartLeaveDate;
		}
		set
		{
			if ((this._StartLeaveDate != value))
			{
				this.OnStartLeaveDateChanging(value);
				this.SendPropertyChanging();
				this._StartLeaveDate = value;
				this.SendPropertyChanged("StartLeaveDate");
				this.OnStartLeaveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndLeaveDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndLeaveDate
	{
		get
		{
			return this._EndLeaveDate;
		}
		set
		{
			if ((this._EndLeaveDate != value))
			{
				this.OnEndLeaveDateChanging(value);
				this.SendPropertyChanging();
				this._EndLeaveDate = value;
				this.SendPropertyChanged("EndLeaveDate");
				this.OnEndLeaveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveStatus", DbType="VarChar(20)")]
	public string LeaveStatus
	{
		get
		{
			return this._LeaveStatus;
		}
		set
		{
			if ((this._LeaveStatus != value))
			{
				this.OnLeaveStatusChanging(value);
				this.SendPropertyChanging();
				this._LeaveStatus = value;
				this.SendPropertyChanged("LeaveStatus");
				this.OnLeaveStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				if (this._EmployeeMaster.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmpIdChanging(value);
				this.SendPropertyChanging();
				this._EmpId = value;
				this.SendPropertyChanged("EmpId");
				this.OnEmpIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeMaster_LeaveMaster", Storage="_EmployeeMaster", ThisKey="EmpId", OtherKey="EmpId", IsForeignKey=true)]
	public EmployeeMaster EmployeeMaster
	{
		get
		{
			return this._EmployeeMaster.Entity;
		}
		set
		{
			EmployeeMaster previousValue = this._EmployeeMaster.Entity;
			if (((previousValue != value) 
						|| (this._EmployeeMaster.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmployeeMaster.Entity = null;
					previousValue.LeaveMasters.Remove(this);
				}
				this._EmployeeMaster.Entity = value;
				if ((value != null))
				{
					value.LeaveMasters.Add(this);
					this._EmpId = value.EmpId;
				}
				else
				{
					this._EmpId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EmployeeMaster");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class manage_cityResult
{
	
	private int _CityId;
	
	private string _CityName;
	
	private System.Nullable<int> _StateId;
	
	private string _StateName;
	
	public manage_cityResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
	public int CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this._CityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(10)")]
	public string CityName
	{
		get
		{
			return this._CityName;
		}
		set
		{
			if ((this._CityName != value))
			{
				this._CityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(10)")]
	public string StateName
	{
		get
		{
			return this._StateName;
		}
		set
		{
			if ((this._StateName != value))
			{
				this._StateName = value;
			}
		}
	}
}

public partial class manage_contactusResult
{
	
	private int _CId;
	
	private string _ComapanyName;
	
	private string _Addres;
	
	private string _MobileNo;
	
	private string _Phone;
	
	private string _FaxNo;
	
	private string _Email;
	
	private string _Website;
	
	private string _LocationUrl;
	
	public manage_contactusResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", DbType="Int NOT NULL")]
	public int CId
	{
		get
		{
			return this._CId;
		}
		set
		{
			if ((this._CId != value))
			{
				this._CId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComapanyName", DbType="VarChar(20)")]
	public string ComapanyName
	{
		get
		{
			return this._ComapanyName;
		}
		set
		{
			if ((this._ComapanyName != value))
			{
				this._ComapanyName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this._Addres = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this._MobileNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this._Phone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNo", DbType="VarChar(10)")]
	public string FaxNo
	{
		get
		{
			return this._FaxNo;
		}
		set
		{
			if ((this._FaxNo != value))
			{
				this._FaxNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(10)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(20)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this._Website = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationUrl", DbType="VarChar(20)")]
	public string LocationUrl
	{
		get
		{
			return this._LocationUrl;
		}
		set
		{
			if ((this._LocationUrl != value))
			{
				this._LocationUrl = value;
			}
		}
	}
}

public partial class manage_holidaymasterResult
{
	
	private int _HolidayId;
	
	private string _HolidayName;
	
	private System.Nullable<System.DateTime> _HolidayDate;
	
	public manage_holidaymasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayId", DbType="Int NOT NULL")]
	public int HolidayId
	{
		get
		{
			return this._HolidayId;
		}
		set
		{
			if ((this._HolidayId != value))
			{
				this._HolidayId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayName", DbType="VarChar(10)")]
	public string HolidayName
	{
		get
		{
			return this._HolidayName;
		}
		set
		{
			if ((this._HolidayName != value))
			{
				this._HolidayName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> HolidayDate
	{
		get
		{
			return this._HolidayDate;
		}
		set
		{
			if ((this._HolidayDate != value))
			{
				this._HolidayDate = value;
			}
		}
	}
}

public partial class manage_stateResult
{
	
	private int _StateId;
	
	private string _StateName;
	
	public manage_stateResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
	public int StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(10)")]
	public string StateName
	{
		get
		{
			return this._StateName;
		}
		set
		{
			if ((this._StateName != value))
			{
				this._StateName = value;
			}
		}
	}
}

public partial class manage_companytypemasterResult
{
	
	private int _CompanytypeId;
	
	private string _CompanyType;
	
	public manage_companytypemasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanytypeId", DbType="Int NOT NULL")]
	public int CompanytypeId
	{
		get
		{
			return this._CompanytypeId;
		}
		set
		{
			if ((this._CompanytypeId != value))
			{
				this._CompanytypeId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="VarChar(10)")]
	public string CompanyType
	{
		get
		{
			return this._CompanyType;
		}
		set
		{
			if ((this._CompanyType != value))
			{
				this._CompanyType = value;
			}
		}
	}
}

public partial class manage_designationmasterResult
{
	
	private int _DegId;
	
	private string _Designation;
	
	public manage_designationmasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", DbType="Int NOT NULL")]
	public int DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				this._DegId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(20)")]
	public string Designation
	{
		get
		{
			return this._Designation;
		}
		set
		{
			if ((this._Designation != value))
			{
				this._Designation = value;
			}
		}
	}
}

public partial class manage_newsmasterResult
{
	
	private int _NewsId;
	
	private string _News;
	
	private System.Nullable<System.DateTime> _NewsDate;
	
	private System.Nullable<int> _CompanyId;
	
	private System.Nullable<bool> _Flag;
	
	public manage_newsmasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", DbType="Int NOT NULL")]
	public int NewsId
	{
		get
		{
			return this._NewsId;
		}
		set
		{
			if ((this._NewsId != value))
			{
				this._NewsId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_News", DbType="VarChar(100)")]
	public string News
	{
		get
		{
			return this._News;
		}
		set
		{
			if ((this._News != value))
			{
				this._News = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsDate", DbType="Date")]
	public System.Nullable<System.DateTime> NewsDate
	{
		get
		{
			return this._NewsDate;
		}
		set
		{
			if ((this._NewsDate != value))
			{
				this._NewsDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Bit")]
	public System.Nullable<bool> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this._Flag = value;
			}
		}
	}
}

public partial class manage_eventmasterResult
{
	
	private int _EventId;
	
	private System.Nullable<System.DateTime> _EventDate;
	
	private string _EventName;
	
	private System.Nullable<int> _Company_Id;
	
	public manage_eventmasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
	public int EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this._EventId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="Date")]
	public System.Nullable<System.DateTime> EventDate
	{
		get
		{
			return this._EventDate;
		}
		set
		{
			if ((this._EventDate != value))
			{
				this._EventDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(20)")]
	public string EventName
	{
		get
		{
			return this._EventName;
		}
		set
		{
			if ((this._EventName != value))
			{
				this._EventName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Id]", Storage="_Company_Id", DbType="Int")]
	public System.Nullable<int> Company_Id
	{
		get
		{
			return this._Company_Id;
		}
		set
		{
			if ((this._Company_Id != value))
			{
				this._Company_Id = value;
			}
		}
	}
}

public partial class manage_employeeResult
{
	
	private int _EmpId;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId;
	
	private System.Nullable<int> _StateId;
	
	private string _MobileNo;
	
	private string _Email;
	
	private string _Passwrd;
	
	private string _Photo;
	
	private System.Nullable<int> _DegId;
	
	private string _Dob;
	
	private string _JoinDate;
	
	private System.Nullable<int> _CompanyId;
	
	private int _CityId1;
	
	private string _CityName;
	
	private System.Nullable<int> _StateId1;
	
	private int _StateId2;
	
	private string _StateName;
	
	private int _DegId1;
	
	private string _Designation;
	
	public manage_employeeResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int NOT NULL")]
	public int EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this._EmpId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(10)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this._FName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(10)")]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this._MName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(10)")]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this._LName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this._Addres = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this._CityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this._MobileNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwrd", DbType="VarChar(18)")]
	public string Passwrd
	{
		get
		{
			return this._Passwrd;
		}
		set
		{
			if ((this._Passwrd != value))
			{
				this._Passwrd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", DbType="Int")]
	public System.Nullable<int> DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				this._DegId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="VarChar(50)")]
	public string Dob
	{
		get
		{
			return this._Dob;
		}
		set
		{
			if ((this._Dob != value))
			{
				this._Dob = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="VarChar(50)")]
	public string JoinDate
	{
		get
		{
			return this._JoinDate;
		}
		set
		{
			if ((this._JoinDate != value))
			{
				this._JoinDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId1", DbType="Int NOT NULL")]
	public int CityId1
	{
		get
		{
			return this._CityId1;
		}
		set
		{
			if ((this._CityId1 != value))
			{
				this._CityId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(10)")]
	public string CityName
	{
		get
		{
			return this._CityName;
		}
		set
		{
			if ((this._CityName != value))
			{
				this._CityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId1", DbType="Int")]
	public System.Nullable<int> StateId1
	{
		get
		{
			return this._StateId1;
		}
		set
		{
			if ((this._StateId1 != value))
			{
				this._StateId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId2", DbType="Int NOT NULL")]
	public int StateId2
	{
		get
		{
			return this._StateId2;
		}
		set
		{
			if ((this._StateId2 != value))
			{
				this._StateId2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(10)")]
	public string StateName
	{
		get
		{
			return this._StateName;
		}
		set
		{
			if ((this._StateName != value))
			{
				this._StateName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId1", DbType="Int NOT NULL")]
	public int DegId1
	{
		get
		{
			return this._DegId1;
		}
		set
		{
			if ((this._DegId1 != value))
			{
				this._DegId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(20)")]
	public string Designation
	{
		get
		{
			return this._Designation;
		}
		set
		{
			if ((this._Designation != value))
			{
				this._Designation = value;
			}
		}
	}
}

public partial class manage_AllprojectResult
{
	
	private int _Pid;
	
	private string _ProjectNameAll;
	
	private System.Nullable<int> _CompanyId;
	
	public manage_AllprojectResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int NOT NULL")]
	public int Pid
	{
		get
		{
			return this._Pid;
		}
		set
		{
			if ((this._Pid != value))
			{
				this._Pid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNameAll", DbType="VarChar(50)")]
	public string ProjectNameAll
	{
		get
		{
			return this._ProjectNameAll;
		}
		set
		{
			if ((this._ProjectNameAll != value))
			{
				this._ProjectNameAll = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
}

public partial class manage_taskmaster11Result
{
	
	private int _TaskId;
	
	private string _TaskName;
	
	private System.Nullable<int> _ProjectId;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _TaskStatus;
	
	private System.Nullable<System.DateTime> _TaskDate;
	
	private System.Nullable<int> _EmpId;
	
	private int _ProjectId1;
	
	private string _Discription;
	
	private System.Nullable<System.DateTime> _ProjectDate;
	
	private System.Nullable<int> _EmpId1;
	
	private System.Nullable<System.DateTime> _StartDate1;
	
	private System.Nullable<System.DateTime> _Enddate1;
	
	private System.Nullable<int> _No_Of_Days;
	
	private System.Nullable<int> _CompanyId;
	
	private System.Nullable<int> _Pid;
	
	private int _Pid1;
	
	private string _ProjectNameAll;
	
	private System.Nullable<int> _CompanyId1;
	
	public manage_taskmaster11Result()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int NOT NULL")]
	public int TaskId
	{
		get
		{
			return this._TaskId;
		}
		set
		{
			if ((this._TaskId != value))
			{
				this._TaskId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="VarChar(20)")]
	public string TaskName
	{
		get
		{
			return this._TaskName;
		}
		set
		{
			if ((this._TaskName != value))
			{
				this._TaskName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
	public System.Nullable<int> ProjectId
	{
		get
		{
			return this._ProjectId;
		}
		set
		{
			if ((this._ProjectId != value))
			{
				this._ProjectId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this._StartDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this._EndDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatus", DbType="VarChar(30)")]
	public string TaskStatus
	{
		get
		{
			return this._TaskStatus;
		}
		set
		{
			if ((this._TaskStatus != value))
			{
				this._TaskStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDate", DbType="Date")]
	public System.Nullable<System.DateTime> TaskDate
	{
		get
		{
			return this._TaskDate;
		}
		set
		{
			if ((this._TaskDate != value))
			{
				this._TaskDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this._EmpId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId1", DbType="Int NOT NULL")]
	public int ProjectId1
	{
		get
		{
			return this._ProjectId1;
		}
		set
		{
			if ((this._ProjectId1 != value))
			{
				this._ProjectId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="VarChar(50)")]
	public string Discription
	{
		get
		{
			return this._Discription;
		}
		set
		{
			if ((this._Discription != value))
			{
				this._Discription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ProjectDate
	{
		get
		{
			return this._ProjectDate;
		}
		set
		{
			if ((this._ProjectDate != value))
			{
				this._ProjectDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId1", DbType="Int")]
	public System.Nullable<int> EmpId1
	{
		get
		{
			return this._EmpId1;
		}
		set
		{
			if ((this._EmpId1 != value))
			{
				this._EmpId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate1", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate1
	{
		get
		{
			return this._StartDate1;
		}
		set
		{
			if ((this._StartDate1 != value))
			{
				this._StartDate1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enddate1", DbType="DateTime")]
	public System.Nullable<System.DateTime> Enddate1
	{
		get
		{
			return this._Enddate1;
		}
		set
		{
			if ((this._Enddate1 != value))
			{
				this._Enddate1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Of_Days", DbType="Int")]
	public System.Nullable<int> No_Of_Days
	{
		get
		{
			return this._No_Of_Days;
		}
		set
		{
			if ((this._No_Of_Days != value))
			{
				this._No_Of_Days = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int")]
	public System.Nullable<int> Pid
	{
		get
		{
			return this._Pid;
		}
		set
		{
			if ((this._Pid != value))
			{
				this._Pid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid1", DbType="Int NOT NULL")]
	public int Pid1
	{
		get
		{
			return this._Pid1;
		}
		set
		{
			if ((this._Pid1 != value))
			{
				this._Pid1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNameAll", DbType="VarChar(50)")]
	public string ProjectNameAll
	{
		get
		{
			return this._ProjectNameAll;
		}
		set
		{
			if ((this._ProjectNameAll != value))
			{
				this._ProjectNameAll = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId1", DbType="Int")]
	public System.Nullable<int> CompanyId1
	{
		get
		{
			return this._CompanyId1;
		}
		set
		{
			if ((this._CompanyId1 != value))
			{
				this._CompanyId1 = value;
			}
		}
	}
}

public partial class manage_company1Result
{
	
	private int _CityId;
	
	private string _CityName;
	
	private System.Nullable<int> _StateId;
	
	private int _CompanyId;
	
	private string _CompanyName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId1;
	
	private System.Nullable<int> _StateId1;
	
	private string _MobileNo;
	
	private string _Phone;
	
	private string _FaxNo;
	
	private string _Email;
	
	private string _Website;
	
	private string _Photo;
	
	private System.Nullable<int> _EmpStrenght;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<int> _CompanyTypeId;
	
	private string _pwd;
	
	private int _CompanytypeId1;
	
	private string _CompanyType;
	
	private int _StateId2;
	
	private string _StateName;
	
	public manage_company1Result()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
	public int CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this._CityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(10)")]
	public string CityName
	{
		get
		{
			return this._CityName;
		}
		set
		{
			if ((this._CityName != value))
			{
				this._CityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
	public int CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(20)")]
	public string CompanyName
	{
		get
		{
			return this._CompanyName;
		}
		set
		{
			if ((this._CompanyName != value))
			{
				this._CompanyName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this._Addres = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId1", DbType="Int")]
	public System.Nullable<int> CityId1
	{
		get
		{
			return this._CityId1;
		}
		set
		{
			if ((this._CityId1 != value))
			{
				this._CityId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId1", DbType="Int")]
	public System.Nullable<int> StateId1
	{
		get
		{
			return this._StateId1;
		}
		set
		{
			if ((this._StateId1 != value))
			{
				this._StateId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this._MobileNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this._Phone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNo", DbType="VarChar(10)")]
	public string FaxNo
	{
		get
		{
			return this._FaxNo;
		}
		set
		{
			if ((this._FaxNo != value))
			{
				this._FaxNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="VarChar(20)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this._Website = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarChar(250)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpStrenght", DbType="Int")]
	public System.Nullable<int> EmpStrenght
	{
		get
		{
			return this._EmpStrenght;
		}
		set
		{
			if ((this._EmpStrenght != value))
			{
				this._EmpStrenght = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this._RegDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTypeId", DbType="Int")]
	public System.Nullable<int> CompanyTypeId
	{
		get
		{
			return this._CompanyTypeId;
		}
		set
		{
			if ((this._CompanyTypeId != value))
			{
				this._CompanyTypeId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(10)")]
	public string pwd
	{
		get
		{
			return this._pwd;
		}
		set
		{
			if ((this._pwd != value))
			{
				this._pwd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanytypeId1", DbType="Int NOT NULL")]
	public int CompanytypeId1
	{
		get
		{
			return this._CompanytypeId1;
		}
		set
		{
			if ((this._CompanytypeId1 != value))
			{
				this._CompanytypeId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="VarChar(20)")]
	public string CompanyType
	{
		get
		{
			return this._CompanyType;
		}
		set
		{
			if ((this._CompanyType != value))
			{
				this._CompanyType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId2", DbType="Int NOT NULL")]
	public int StateId2
	{
		get
		{
			return this._StateId2;
		}
		set
		{
			if ((this._StateId2 != value))
			{
				this._StateId2 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(10)")]
	public string StateName
	{
		get
		{
			return this._StateName;
		}
		set
		{
			if ((this._StateName != value))
			{
				this._StateName = value;
			}
		}
	}
}

public partial class manage_projectmasterResult
{
	
	private int _ProjectId;
	
	private string _Discription;
	
	private System.Nullable<System.DateTime> _ProjectDate;
	
	private System.Nullable<int> _EmpId;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _Enddate;
	
	private System.Nullable<int> _No_Of_Days;
	
	private System.Nullable<int> _CompanyId;
	
	private System.Nullable<int> _Pid;
	
	private int _EmpId1;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId;
	
	private System.Nullable<int> _StateId;
	
	private string _MobileNo;
	
	private string _Email;
	
	private string _Passwrd;
	
	private string _Photo;
	
	private System.Nullable<int> _DegId;
	
	private string _Dob;
	
	private string _JoinDate;
	
	private System.Nullable<int> _CompanyId1;
	
	public manage_projectmasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
	public int ProjectId
	{
		get
		{
			return this._ProjectId;
		}
		set
		{
			if ((this._ProjectId != value))
			{
				this._ProjectId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discription", DbType="VarChar(150)")]
	public string Discription
	{
		get
		{
			return this._Discription;
		}
		set
		{
			if ((this._Discription != value))
			{
				this._Discription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ProjectDate
	{
		get
		{
			return this._ProjectDate;
		}
		set
		{
			if ((this._ProjectDate != value))
			{
				this._ProjectDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this._EmpId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this._StartDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enddate", DbType="DateTime")]
	public System.Nullable<System.DateTime> Enddate
	{
		get
		{
			return this._Enddate;
		}
		set
		{
			if ((this._Enddate != value))
			{
				this._Enddate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Of_Days", DbType="Int")]
	public System.Nullable<int> No_Of_Days
	{
		get
		{
			return this._No_Of_Days;
		}
		set
		{
			if ((this._No_Of_Days != value))
			{
				this._No_Of_Days = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int")]
	public System.Nullable<int> Pid
	{
		get
		{
			return this._Pid;
		}
		set
		{
			if ((this._Pid != value))
			{
				this._Pid = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId1", DbType="Int NOT NULL")]
	public int EmpId1
	{
		get
		{
			return this._EmpId1;
		}
		set
		{
			if ((this._EmpId1 != value))
			{
				this._EmpId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(10)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this._FName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(10)")]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this._MName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(10)")]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this._LName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this._Addres = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this._CityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this._MobileNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwrd", DbType="VarChar(18)")]
	public string Passwrd
	{
		get
		{
			return this._Passwrd;
		}
		set
		{
			if ((this._Passwrd != value))
			{
				this._Passwrd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", DbType="Int")]
	public System.Nullable<int> DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				this._DegId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="VarChar(50)")]
	public string Dob
	{
		get
		{
			return this._Dob;
		}
		set
		{
			if ((this._Dob != value))
			{
				this._Dob = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="VarChar(50)")]
	public string JoinDate
	{
		get
		{
			return this._JoinDate;
		}
		set
		{
			if ((this._JoinDate != value))
			{
				this._JoinDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId1", DbType="Int")]
	public System.Nullable<int> CompanyId1
	{
		get
		{
			return this._CompanyId1;
		}
		set
		{
			if ((this._CompanyId1 != value))
			{
				this._CompanyId1 = value;
			}
		}
	}
}

public partial class manage_bugResult
{
	
	private int _EmpId;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId;
	
	private System.Nullable<int> _StateId;
	
	private string _MobileNo;
	
	private string _Email;
	
	private string _Passwrd;
	
	private string _Photo;
	
	private System.Nullable<int> _DegId;
	
	private string _Dob;
	
	private string _JoinDate;
	
	private System.Nullable<int> _CompanyId;
	
	private int _BugId;
	
	private string _BugName;
	
	private System.Nullable<int> _EmpId1;
	
	private System.Nullable<int> _TaskId;
	
	private System.Nullable<System.DateTime> _BugDate;
	
	private string _Solution;
	
	private int _TaskId1;
	
	private string _TaskName;
	
	private System.Nullable<int> _ProjectId;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private string _TaskStatus;
	
	private System.Nullable<System.DateTime> _TaskDate;
	
	private System.Nullable<int> _EmpId2;
	
	public manage_bugResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int NOT NULL")]
	public int EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this._EmpId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(10)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this._FName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(10)")]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this._MName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(10)")]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this._LName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this._Addres = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this._CityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this._MobileNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwrd", DbType="VarChar(18)")]
	public string Passwrd
	{
		get
		{
			return this._Passwrd;
		}
		set
		{
			if ((this._Passwrd != value))
			{
				this._Passwrd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", DbType="Int")]
	public System.Nullable<int> DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				this._DegId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="VarChar(50)")]
	public string Dob
	{
		get
		{
			return this._Dob;
		}
		set
		{
			if ((this._Dob != value))
			{
				this._Dob = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="VarChar(50)")]
	public string JoinDate
	{
		get
		{
			return this._JoinDate;
		}
		set
		{
			if ((this._JoinDate != value))
			{
				this._JoinDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BugId", DbType="Int NOT NULL")]
	public int BugId
	{
		get
		{
			return this._BugId;
		}
		set
		{
			if ((this._BugId != value))
			{
				this._BugId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BugName", DbType="VarChar(100)")]
	public string BugName
	{
		get
		{
			return this._BugName;
		}
		set
		{
			if ((this._BugName != value))
			{
				this._BugName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId1", DbType="Int")]
	public System.Nullable<int> EmpId1
	{
		get
		{
			return this._EmpId1;
		}
		set
		{
			if ((this._EmpId1 != value))
			{
				this._EmpId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int")]
	public System.Nullable<int> TaskId
	{
		get
		{
			return this._TaskId;
		}
		set
		{
			if ((this._TaskId != value))
			{
				this._TaskId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BugDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> BugDate
	{
		get
		{
			return this._BugDate;
		}
		set
		{
			if ((this._BugDate != value))
			{
				this._BugDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solution", DbType="VarChar(150)")]
	public string Solution
	{
		get
		{
			return this._Solution;
		}
		set
		{
			if ((this._Solution != value))
			{
				this._Solution = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId1", DbType="Int NOT NULL")]
	public int TaskId1
	{
		get
		{
			return this._TaskId1;
		}
		set
		{
			if ((this._TaskId1 != value))
			{
				this._TaskId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="VarChar(20)")]
	public string TaskName
	{
		get
		{
			return this._TaskName;
		}
		set
		{
			if ((this._TaskName != value))
			{
				this._TaskName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
	public System.Nullable<int> ProjectId
	{
		get
		{
			return this._ProjectId;
		}
		set
		{
			if ((this._ProjectId != value))
			{
				this._ProjectId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this._StartDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this._EndDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskStatus", DbType="VarChar(30)")]
	public string TaskStatus
	{
		get
		{
			return this._TaskStatus;
		}
		set
		{
			if ((this._TaskStatus != value))
			{
				this._TaskStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDate", DbType="Date")]
	public System.Nullable<System.DateTime> TaskDate
	{
		get
		{
			return this._TaskDate;
		}
		set
		{
			if ((this._TaskDate != value))
			{
				this._TaskDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId2", DbType="Int")]
	public System.Nullable<int> EmpId2
	{
		get
		{
			return this._EmpId2;
		}
		set
		{
			if ((this._EmpId2 != value))
			{
				this._EmpId2 = value;
			}
		}
	}
}

public partial class manage_leavemasterResult
{
	
	private int _LeaveId;
	
	private string _LeaveReason;
	
	private System.Nullable<System.DateTime> _LeaveDate;
	
	private System.Nullable<System.DateTime> _StartLeaveDate;
	
	private System.Nullable<System.DateTime> _EndLeaveDate;
	
	private string _LeaveStatus;
	
	private System.Nullable<int> _EmpId;
	
	private int _EmpId1;
	
	private string _FName;
	
	private string _MName;
	
	private string _LName;
	
	private string _Addres;
	
	private System.Nullable<int> _CityId;
	
	private System.Nullable<int> _StateId;
	
	private string _MobileNo;
	
	private string _Email;
	
	private string _Passwrd;
	
	private string _Photo;
	
	private System.Nullable<int> _DegId;
	
	private string _Dob;
	
	private string _JoinDate;
	
	private System.Nullable<int> _CompanyId;
	
	public manage_leavemasterResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveId", DbType="Int NOT NULL")]
	public int LeaveId
	{
		get
		{
			return this._LeaveId;
		}
		set
		{
			if ((this._LeaveId != value))
			{
				this._LeaveId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveReason", DbType="VarChar(200)")]
	public string LeaveReason
	{
		get
		{
			return this._LeaveReason;
		}
		set
		{
			if ((this._LeaveReason != value))
			{
				this._LeaveReason = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LeaveDate
	{
		get
		{
			return this._LeaveDate;
		}
		set
		{
			if ((this._LeaveDate != value))
			{
				this._LeaveDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartLeaveDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartLeaveDate
	{
		get
		{
			return this._StartLeaveDate;
		}
		set
		{
			if ((this._StartLeaveDate != value))
			{
				this._StartLeaveDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndLeaveDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndLeaveDate
	{
		get
		{
			return this._EndLeaveDate;
		}
		set
		{
			if ((this._EndLeaveDate != value))
			{
				this._EndLeaveDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveStatus", DbType="VarChar(20)")]
	public string LeaveStatus
	{
		get
		{
			return this._LeaveStatus;
		}
		set
		{
			if ((this._LeaveStatus != value))
			{
				this._LeaveStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int")]
	public System.Nullable<int> EmpId
	{
		get
		{
			return this._EmpId;
		}
		set
		{
			if ((this._EmpId != value))
			{
				this._EmpId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId1", DbType="Int NOT NULL")]
	public int EmpId1
	{
		get
		{
			return this._EmpId1;
		}
		set
		{
			if ((this._EmpId1 != value))
			{
				this._EmpId1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(10)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this._FName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MName", DbType="VarChar(10)")]
	public string MName
	{
		get
		{
			return this._MName;
		}
		set
		{
			if ((this._MName != value))
			{
				this._MName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="VarChar(10)")]
	public string LName
	{
		get
		{
			return this._LName;
		}
		set
		{
			if ((this._LName != value))
			{
				this._LName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addres", DbType="VarChar(50)")]
	public string Addres
	{
		get
		{
			return this._Addres;
		}
		set
		{
			if ((this._Addres != value))
			{
				this._Addres = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				this._CityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int")]
	public System.Nullable<int> StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this._StateId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(12)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this._MobileNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(80)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwrd", DbType="VarChar(18)")]
	public string Passwrd
	{
		get
		{
			return this._Passwrd;
		}
		set
		{
			if ((this._Passwrd != value))
			{
				this._Passwrd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegId", DbType="Int")]
	public System.Nullable<int> DegId
	{
		get
		{
			return this._DegId;
		}
		set
		{
			if ((this._DegId != value))
			{
				this._DegId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dob", DbType="VarChar(50)")]
	public string Dob
	{
		get
		{
			return this._Dob;
		}
		set
		{
			if ((this._Dob != value))
			{
				this._Dob = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="VarChar(50)")]
	public string JoinDate
	{
		get
		{
			return this._JoinDate;
		}
		set
		{
			if ((this._JoinDate != value))
			{
				this._JoinDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int")]
	public System.Nullable<int> CompanyId
	{
		get
		{
			return this._CompanyId;
		}
		set
		{
			if ((this._CompanyId != value))
			{
				this._CompanyId = value;
			}
		}
	}
}
#pragma warning restore 1591
